#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã –ª—é–±–∏–º—ã—Ö –∫–∞—Ä—Ç–æ—á–µ–∫
"""

import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from database.connection import db
from services.user_service import user_service
from services.card_service import card_service
from loguru import logger

async def test_favorites_system():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–∏—Å—Ç–µ–º—É –ª—é–±–∏–º—ã—Ö –∫–∞—Ä—Ç–æ—á–µ–∫"""
    print("üîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –ª—é–±–∏–º—ã—Ö –∫–∞—Ä—Ç–æ—á–µ–∫...")
    
    try:
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        await db.connect()
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ")
        
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        test_user = await user_service.get_user_by_telegram_id(123456789)
        if not test_user:
            print("‚ùå –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return
        
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {test_user.telegram_id}")
        print(f"üìä –í—Å–µ–≥–æ –∫–∞—Ä—Ç–æ—á–µ–∫: {test_user.total_cards}")
        print(f"üé¥ –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∫–∞—Ä—Ç–æ—á–µ–∫: {len(test_user.cards)}")
        print(f"üíñ –õ—é–±–∏–º—ã—Ö –∫–∞—Ä—Ç–æ—á–µ–∫: {len(test_user.favorite_cards)}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–µ –ª—é–±–∏–º—ã–µ
        if test_user.favorite_cards:
            print("\nüíñ –¢–µ–∫—É—â–∏–µ –ª—é–±–∏–º—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏:")
            for card_id in test_user.favorite_cards:
                card = await card_service.get_card_by_id(card_id)
                if card:
                    print(f"  - {card.name} ({card.rarity})")
                else:
                    print(f"  - ‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞ (ID: {card_id})")
        
        # –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–ª–µ–∫—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        from services.game_service import game_service
        collection, total_pages, current_page = await game_service.get_user_collection(test_user, 1, 100)
        print(f"\nüìö –í—Å–µ–≥–æ –∫–∞—Ä—Ç–æ—á–µ–∫ –≤ –∫–æ–ª–ª–µ–∫—Ü–∏–∏: {len(collection)}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 10 –∫–∞—Ä—Ç–æ—á–µ–∫
        print("\nüé¥ –ü–µ—Ä–≤—ã–µ 10 –∫–∞—Ä—Ç–æ—á–µ–∫ –≤ –∫–æ–ª–ª–µ–∫—Ü–∏–∏:")
        for i, (card, quantity) in enumerate(collection[:10]):
            is_favorite = str(card.id) in test_user.favorite_cards
            status = "üíñ" if is_favorite else "‚ö™"
            print(f"  {i+1:2d}. {status} {card.name} ({card.rarity}) x{quantity}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –ª—é–±–∏–º—ã–µ
        if collection:
            test_card, _ = collection[0]
            test_card_id = str(test_card.id)
            
            print(f"\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –ª—é–±–∏–º—ã–µ:")
            print(f"  –ö–∞—Ä—Ç–æ—á–∫–∞: {test_card.name}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–Ω–æ –ª–∏ –¥–æ–±–∞–≤–∏—Ç—å
            can_add = test_user.add_to_favorites(test_card_id)
            print(f"  –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å: {can_add}")
            
            if can_add:
                # –î–æ–±–∞–≤–ª—è–µ–º
                test_user.add_to_favorites(test_card_id)
                await user_service.update_user(test_user)
                print(f"  ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –ª—é–±–∏–º—ã–µ")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–æ–±–∞–≤–∏–ª–∞—Å—å
                updated_user = await user_service.get_user_by_telegram_id(123456789)
                is_now_favorite = test_card_id in updated_user.favorite_cards
                print(f"  –í –ª—é–±–∏–º—ã—Ö –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è: {is_now_favorite}")
                
                # –£–¥–∞–ª—è–µ–º –æ–±—Ä–∞—Ç–Ω–æ
                updated_user.remove_from_favorites(test_card_id)
                await user_service.update_user(updated_user)
                print(f"  ‚úÖ –£–¥–∞–ª–µ–Ω–∞ –∏–∑ –ª—é–±–∏–º—ã—Ö")
        
        print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        import traceback
        traceback.print_exc()
    
    finally:
        # –û—Ç–∫–ª—é—á–∞–µ–º—Å—è –æ—Ç –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        await db.disconnect()
        print("üîå –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –æ—Ç –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö")


if __name__ == "__main__":
    asyncio.run(test_favorites_system())

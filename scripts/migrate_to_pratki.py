#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏ –∫–∞—Ä—Ç–æ—á–µ–∫ –≤ –ë–î 'pratki'
"""

import asyncio
import sys
from pathlib import Path
from motor.motor_asyncio import AsyncIOMotorClient
from loguru import logger

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É –≤ –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞
sys.path.append(str(Path(__file__).parent.parent))

from config import settings


async def migrate_cards():
    """–ú–∏–≥—Ä–∞—Ü–∏—è –∫–∞—Ä—Ç–æ—á–µ–∫ –≤ –Ω–æ–≤—É—é –ë–î"""
    try:
        # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î
        client = AsyncIOMotorClient(settings.mongodb_url)
        old_db = client[settings.database_name]
        new_db = client["pratki"]
        
        logger.info(f"üìÅ –°—Ç–∞—Ä–∞—è –ë–î: {settings.database_name}")
        logger.info(f"üìÅ –ù–æ–≤–∞—è –ë–î: pratki")
        
        # –ü–æ–ª—É—á–∞–µ–º –∫–∞—Ä—Ç–æ—á–∫–∏ –∏–∑ —Å—Ç–∞—Ä–æ–π –ë–î
        old_cards = await old_db["cards"].find({"is_active": True}).to_list(length=None)
        logger.info(f"üé¥ –ù–∞–π–¥–µ–Ω–æ –∫–∞—Ä—Ç–æ—á–µ–∫: {len(old_cards)}")
        
        if not old_cards:
            logger.warning("‚ùå –ù–µ—Ç –∫–∞—Ä—Ç–æ—á–µ–∫ –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏!")
            return
        
        # –ú–∏–≥—Ä–∏—Ä—É–µ–º –≤ –Ω–æ–≤—É—é –ë–î
        migrated = 0
        for card in old_cards:
            card.pop('_id', None)  # –£–±–∏—Ä–∞–µ–º —Å—Ç–∞—Ä—ã–π ID
            await new_db["cards"].insert_one(card)
            migrated += 1
        
        logger.info(f"‚úÖ –ú–∏–≥—Ä–∏—Ä–æ–≤–∞–Ω–æ –∫–∞—Ä—Ç–æ—á–µ–∫: {migrated}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        total_new = await new_db["cards"].count_documents({})
        logger.info(f"üé¥ –í—Å–µ–≥–æ –≤ –Ω–æ–≤–æ–π –ë–î: {total_new}")
        
        client.close()
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞: {e}")


if __name__ == "__main__":
    logger.remove()
    logger.add(sys.stderr, level="INFO", format="<green>{time:HH:mm:ss}</green> | <level>{message}</level>")
    
    logger.info("üöÄ –ú–∏–≥—Ä–∞—Ü–∏—è –∫–∞—Ä—Ç–æ—á–µ–∫ –≤ –ë–î 'pratki'...")
    asyncio.run(migrate_cards())
    logger.info("‚úÖ –ì–æ—Ç–æ–≤–æ!")

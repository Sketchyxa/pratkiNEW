#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –Ω–∞ –ë–î 'pratki'
"""

import os
import sys
from pathlib import Path
from loguru import logger


def switch_db():
    """–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ –ë–î pratki"""
    try:
        # –ü—É—Ç—å –∫ .env —Ñ–∞–π–ª—É
        env_file = Path(__file__).parent.parent / ".env"
        
        if not env_file.exists():
            logger.error("‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            return False
        
        # –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª
        with open(env_file, 'r', encoding='utf-8') as f:
            content = f.read()
        
        # –ó–∞–º–µ–Ω—è–µ–º DATABASE_NAME
        if 'DATABASE_NAME=' in content:
            content = content.replace('DATABASE_NAME=pratki_bot_new', 'DATABASE_NAME=pratki')
            content = content.replace('DATABASE_NAME=pratki_bot', 'DATABASE_NAME=pratki')
        else:
            content += '\nDATABASE_NAME=pratki'
        
        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ–±—Ä–∞—Ç–Ω–æ
        with open(env_file, 'w', encoding='utf-8') as f:
            f.write(content)
        
        logger.info("‚úÖ –ë–î –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∞ –Ω–∞ 'pratki'")
        return True
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False


if __name__ == "__main__":
    logger.remove()
    logger.add(sys.stderr, level="INFO", format="<green>{time:HH:mm:ss}</green> | <level>{message}</level>")
    
    logger.info("üîÑ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ –ë–î 'pratki'...")
    if switch_db():
        logger.info("‚úÖ –ì–æ—Ç–æ–≤–æ! –¢–µ–ø–µ—Ä—å –∑–∞–ø—É—Å–∫–∞–π—Ç–µ –±–æ—Ç–∞")
    else:
        logger.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –ë–î")

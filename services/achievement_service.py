from datetime import datetime
from typing import Optional, List, Dict, Any
from motor.motor_asyncio import AsyncIOMotorCollection
from loguru import logger

from database.connection import db
from models.achievement import Achievement
from models.user import User, UserAchievement


class AchievementService:
    """–°–µ—Ä–≤–∏—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è–º–∏"""
    
    def __init__(self):
        self.collection: AsyncIOMotorCollection = None
    
    async def get_collection(self) -> AsyncIOMotorCollection:
        if self.collection is None:
            self.collection = db.get_collection("achievements")
        return self.collection
    
    async def create_default_achievements(self):
        """–°–æ–∑–¥–∞–µ—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –¥–ª—è –±–æ—Ç–∞"""
        default_achievements = [
            # –ö–æ–ª–ª–µ–∫—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ
            {
                "name": "–ü–µ—Ä–≤–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞",
                "description": "–ü–æ–ª—É—á–∏—Ç–µ —Å–≤–æ—é –ø–µ—Ä–≤—É—é –∫–∞—Ä—Ç–æ—á–∫—É",
                "icon": "üé¥",
                "category": "collection",
                "condition_type": "cards_count",
                "condition_value": 1,
                "reward_coins": 25,
                "reward_experience": 10,
                "difficulty": "easy",
                "points": 5
            },
            {
                "name": "–ö–æ–ª–ª–µ–∫—Ü–∏–æ–Ω–µ—Ä",
                "description": "–°–æ–±–µ—Ä–∏—Ç–µ 10 –∫–∞—Ä—Ç–æ—á–µ–∫",
                "icon": "üìö",
                "category": "collection", 
                "condition_type": "cards_count",
                "condition_value": 10,
                "reward_coins": 100,
                "reward_experience": 50,
                "difficulty": "normal",
                "points": 15
            },
            {
                "name": "–ú–∞—Å—Ç–µ—Ä –∫–æ–ª–ª–µ–∫—Ü–∏–æ–Ω–µ—Ä",
                "description": "–°–æ–±–µ—Ä–∏—Ç–µ 50 –∫–∞—Ä—Ç–æ—á–µ–∫",
                "icon": "üèÜ",
                "category": "collection",
                "condition_type": "cards_count", 
                "condition_value": 50,
                "reward_coins": 500,
                "reward_experience": 200,
                "difficulty": "hard",
                "points": 30
            },
            {
                "name": "–õ–µ–≥–µ–Ω–¥–∞ –∫–æ–ª–ª–µ–∫—Ü–∏–π",
                "description": "–°–æ–±–µ—Ä–∏—Ç–µ 100 –∫–∞—Ä—Ç–æ—á–µ–∫",
                "icon": "üëë",
                "category": "collection",
                "condition_type": "cards_count",
                "condition_value": 100,
                "reward_coins": 1000,
                "reward_experience": 500,
                "difficulty": "legendary",
                "points": 50
            },
            
            # –†–µ–¥–∫–æ—Å—Ç–∏
            {
                "name": "–†–µ–¥–∫–∏–π —ç–∫–∑–µ–º–ø–ª—è—Ä",
                "description": "–ü–æ–ª—É—á–∏—Ç–µ –ø–µ—Ä–≤—É—é Rare –∫–∞—Ä—Ç–æ—á–∫—É",
                "icon": "üîµ",
                "category": "collection",
                "condition_type": "rarity_card",
                "condition_value": 1,
                "condition_data": {"rarity": "rare"},
                "reward_coins": 50,
                "reward_experience": 25,
                "difficulty": "normal",
                "points": 10
            },
            {
                "name": "–≠–ø–∏—á–µ—Å–∫–∏–π –∫–æ–ª–ª–µ–∫—Ü–∏–æ–Ω–µ—Ä",
                "description": "–ü–æ–ª—É—á–∏—Ç–µ –ø–µ—Ä–≤—É—é Epic –∫–∞—Ä—Ç–æ—á–∫—É",
                "icon": "üü£",
                "category": "collection",
                "condition_type": "rarity_card",
                "condition_value": 1,
                "condition_data": {"rarity": "epic"},
                "reward_coins": 150,
                "reward_experience": 75,
                "difficulty": "hard",
                "points": 20
            },
            {
                "name": "–õ–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–π –æ—Ö–æ—Ç–Ω–∏–∫",
                "description": "–ü–æ–ª—É—á–∏—Ç–µ –ø–µ—Ä–≤—É—é Legendary –∫–∞—Ä—Ç–æ—á–∫—É",
                "icon": "üü°",
                "category": "collection",
                "condition_type": "rarity_card",
                "condition_value": 1,
                "condition_data": {"rarity": "legendary"},
                "reward_coins": 300,
                "reward_experience": 150,
                "difficulty": "hard",
                "points": 35
            },
            {
                "name": "–ê—Ä—Ç–µ—Ñ–∞–∫—Ç–Ω—ã–π –º–∞—Å—Ç–µ—Ä",
                "description": "–ü–æ–ª—É—á–∏—Ç–µ –ø–µ—Ä–≤—É—é Artifact –∫–∞—Ä—Ç–æ—á–∫—É",
                "icon": "üî¥",
                "category": "collection",
                "condition_type": "rarity_card",
                "condition_value": 1,
                "condition_data": {"rarity": "artifact"},
                "reward_coins": 1000,
                "reward_experience": 500,
                "difficulty": "legendary",
                "points": 100
            },
            
            # –≠–∫–æ–Ω–æ–º–∏–∫–∞
            {
                "name": "–ë–æ–≥–∞—á",
                "description": "–ù–∞–∫–æ–ø–∏—Ç–µ 1000 –º–æ–Ω–µ—Ç",
                "icon": "üí∞",
                "category": "economy",
                "condition_type": "coins_total",
                "condition_value": 1000,
                "reward_experience": 100,
                "difficulty": "normal",
                "points": 15
            },
            {
                "name": "–ú–∏–ª–ª–∏–æ–Ω–µ—Ä",
                "description": "–ù–∞–∫–æ–ø–∏—Ç–µ 10000 –º–æ–Ω–µ—Ç",
                "icon": "üíé",
                "category": "economy",
                "condition_type": "coins_total",
                "condition_value": 10000,
                "reward_experience": 500,
                "difficulty": "hard",
                "points": 40
            },
            {
                "name": "–ü–µ—Ä–≤–∞—è –ø–æ–∫—É–ø–∫–∞",
                "description": "–ö—É–ø–∏—Ç–µ —Å–≤–æ–π –ø–µ—Ä–≤—ã–π –ø–∞–∫ –≤ –º–∞–≥–∞–∑–∏–Ω–µ",
                "icon": "üõí",
                "category": "economy",
                "condition_type": "shop_purchase",
                "condition_value": 1,
                "reward_coins": 50,
                "difficulty": "easy",
                "points": 5
            },
            
            # –£—Ä–æ–≤–Ω–∏ –∏ –æ–ø—ã—Ç
            {
                "name": "–ù–æ–≤–∏—á–æ–∫",
                "description": "–î–æ—Å—Ç–∏–≥–Ω–∏—Ç–µ 2-–≥–æ —É—Ä–æ–≤–Ω—è",
                "icon": "‚≠ê",
                "category": "general",
                "condition_type": "level",
                "condition_value": 2,
                "reward_coins": 50,
                "difficulty": "easy",
                "points": 5
            },
            {
                "name": "–û–ø—ã—Ç–Ω—ã–π –∏–≥—Ä–æ–∫",
                "description": "–î–æ—Å—Ç–∏–≥–Ω–∏—Ç–µ 5-–≥–æ —É—Ä–æ–≤–Ω—è",
                "icon": "‚≠ê‚≠ê",
                "category": "general",
                "condition_type": "level",
                "condition_value": 5,
                "reward_coins": 200,
                "reward_experience": 100,
                "difficulty": "normal",
                "points": 15
            },
            {
                "name": "–ú–∞—Å—Ç–µ—Ä",
                "description": "–î–æ—Å—Ç–∏–≥–Ω–∏—Ç–µ 10-–≥–æ —É—Ä–æ–≤–Ω—è",
                "icon": "‚≠ê‚≠ê‚≠ê",
                "category": "general", 
                "condition_type": "level",
                "condition_value": 10,
                "reward_coins": 500,
                "reward_experience": 250,
                "difficulty": "hard",
                "points": 30
            },
            {
                "name": "–ì—É—Ä—É –∫–∞—Ä—Ç–æ—á–µ–∫",
                "description": "–î–æ—Å—Ç–∏–≥–Ω–∏—Ç–µ 20-–≥–æ —É—Ä–æ–≤–Ω—è",
                "icon": "üåü",
                "category": "general",
                "condition_type": "level",
                "condition_value": 20,
                "reward_coins": 1000,
                "reward_experience": 500,
                "difficulty": "legendary",
                "points": 50
            },
            
            # –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
            {
                "name": "–ü–æ—Å—Ç–æ—è–Ω–Ω—ã–π –∏–≥—Ä–æ–∫",
                "description": "–ò–≥—Ä–∞–π—Ç–µ 7 –¥–Ω–µ–π –ø–æ–¥—Ä—è–¥",
                "icon": "üìÖ",
                "category": "general",
                "condition_type": "days_streak",
                "condition_value": 7,
                "reward_coins": 300,
                "reward_experience": 150,
                "difficulty": "normal",
                "points": 20
            },
            {
                "name": "–ü—Ä–µ–¥–∞–Ω–Ω—ã–π —Ñ–∞–Ω",
                "description": "–ò–≥—Ä–∞–π—Ç–µ 30 –¥–Ω–µ–π –ø–æ–¥—Ä—è–¥",
                "icon": "üóìÔ∏è",
                "category": "general",
                "condition_type": "days_streak", 
                "condition_value": 30,
                "reward_coins": 1000,
                "reward_experience": 500,
                "difficulty": "hard",
                "points": 40
            },
            
            # –°–æ—Ü–∏–∞–ª—å–Ω—ã–µ
            {
                "name": "–ü–µ—Ä–≤–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ",
                "description": "–ü—Ä–µ–¥–ª–æ–∂–∏—Ç–µ —Å–≤–æ—é –ø–µ—Ä–≤—É—é –∫–∞—Ä—Ç–æ—á–∫—É",
                "icon": "üí°",
                "category": "social",
                "condition_type": "suggestions_made",
                "condition_value": 1,
                "reward_coins": 100,
                "reward_experience": 50,
                "difficulty": "normal",
                "points": 10
            },
            {
                "name": "–ö—Ä–µ–∞—Ç–∏–≤–Ω—ã–π –∞–≤—Ç–æ—Ä",
                "description": "–°–æ–∑–¥–∞–π—Ç–µ 5 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –∫–∞—Ä—Ç–æ—á–µ–∫",
                "icon": "üé®",
                "category": "social", 
                "condition_type": "suggestions_made",
                "condition_value": 5,
                "reward_coins": 500,
                "reward_experience": 250,
                "difficulty": "hard",
                "points": 25
            },
            
            # –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ
            {
                "name": "–°—á–∞—Å—Ç–ª–∏–≤—á–∏–∫",
                "description": "–ü–æ–ª—É—á–∏—Ç–µ –∫–∞—Ä—Ç–æ—á–∫—É Artifact —Å–ª—É—á–∞–π–Ω–æ",
                "icon": "üçÄ",
                "category": "special",
                "condition_type": "artifact_random",
                "condition_value": 1,
                "reward_coins": 777,
                "reward_experience": 333,
                "difficulty": "legendary",
                "points": 77,
                "is_hidden": True
            },
            {
                "name": "–†–∞–Ω–Ω—è—è –ø—Ç–∞—à–∫–∞",
                "description": "–ü–æ–ª—É—á–∏—Ç–µ –µ–∂–µ–¥–Ω–µ–≤–Ω—É—é –∫–∞—Ä—Ç–æ—á–∫—É –≤ 6 —É—Ç—Ä–∞",
                "icon": "üåÖ",
                "category": "special",
                "condition_type": "early_bird",
                "condition_value": 1,
                "reward_coins": 100,
                "difficulty": "normal",
                "points": 15,
                "is_hidden": True
            },
            
            # –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –ö–û–õ–õ–ï–ö–¶–ò–û–ù–ù–´–ï –î–û–°–¢–ò–ñ–ï–ù–ò–Ø
            {
                "name": "–ö–æ–ª–ª–µ–∫—Ü–∏–æ–Ω–µ—Ä-–º–∞–Ω—å—è–∫",
                "description": "–°–æ–±–µ—Ä–∏—Ç–µ 500 –∫–∞—Ä—Ç–æ—á–µ–∫",
                "icon": "üî•",
                "category": "collection",
                "condition_type": "cards_count",
                "condition_value": 500,
                "reward_coins": 2000,
                "reward_experience": 1000,
                "difficulty": "legendary",
                "points": 100
            },
            {
                "name": "–•—Ä–∞–Ω–∏—Ç–µ–ª—å –¥—É–±–ª–∏–∫–∞—Ç–æ–≤",
                "description": "–ù–∞–∫–æ–ø–∏—Ç–µ 10 –∫–æ–ø–∏–π –æ–¥–Ω–æ–π –∫–∞—Ä—Ç–æ—á–∫–∏",
                "icon": "üë•",
                "category": "collection",
                "condition_type": "duplicate_cards",
                "condition_value": 10,
                "reward_coins": 500,
                "reward_experience": 200,
                "difficulty": "normal",
                "points": 25
            },
            {
                "name": "–ê—Ä–º–∏—è –∫–ª–æ–Ω–æ–≤",
                "description": "–ù–∞–∫–æ–ø–∏—Ç–µ 50 –∫–æ–ø–∏–π –æ–¥–Ω–æ–π –∫–∞—Ä—Ç–æ—á–∫–∏",
                "icon": "üîÑ",
                "category": "collection",
                "condition_type": "duplicate_cards",
                "condition_value": 50,
                "reward_coins": 2000,
                "reward_experience": 800,
                "difficulty": "hard",
                "points": 75
            },
            {
                "name": "–ü–æ–∫–æ—Ä–∏—Ç–µ–ª—å —Ä–µ–¥–∫–æ—Å—Ç–∏",
                "description": "–°–æ–±–µ—Ä–∏—Ç–µ –ø–æ 20 –∫–∞—Ä—Ç–æ—á–µ–∫ –∫–∞–∂–¥–æ–π —Ä–µ–¥–∫–æ—Å—Ç–∏",
                "icon": "üåà",
                "category": "collection",
                "condition_type": "all_rarities",
                "condition_value": 20,
                "reward_coins": 1500,
                "reward_experience": 800,
                "difficulty": "hard",
                "points": 80
            },
            {
                "name": "–ü–æ–ª–Ω–∞—è –∫–æ–ª–ª–µ–∫—Ü–∏—è",
                "description": "–°–æ–±–µ—Ä–∏—Ç–µ –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏",
                "icon": "üìö",
                "category": "collection",
                "condition_type": "complete_collection",
                "condition_value": 1,
                "reward_coins": 5000,
                "reward_experience": 2000,
                "difficulty": "legendary",
                "points": 200
            },
            
            # –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –≠–ö–û–ù–û–ú–ò–ß–ï–°–ö–ò–ï –î–û–°–¢–ò–ñ–ï–ù–ò–Ø
            {
                "name": "–≠–∫–æ–Ω–æ–º–Ω—ã–π –ø–æ–∫—É–ø–∞—Ç–µ–ª—å",
                "description": "–ö—É–ø–∏—Ç–µ 25 –ø–∞–∫–æ–≤ –≤ –º–∞–≥–∞–∑–∏–Ω–µ",
                "icon": "üõí",
                "category": "economy",
                "condition_type": "shop_purchases",
                "condition_value": 25,
                "reward_coins": 800,
                "reward_experience": 300,
                "difficulty": "normal",
                "points": 30
            },
            {
                "name": "–®–æ–ø–æ–≥–æ–ª–∏–∫",
                "description": "–ö—É–ø–∏—Ç–µ 100 –ø–∞–∫–æ–≤ –≤ –º–∞–≥–∞–∑–∏–Ω–µ",
                "icon": "üõçÔ∏è",
                "category": "economy",
                "condition_type": "shop_purchases",
                "condition_value": 100,
                "reward_coins": 3000,
                "reward_experience": 1000,
                "difficulty": "hard",
                "points": 60
            },
            {
                "name": "–ö—ç—à –º–∞—Å—Ç–µ—Ä",
                "description": "–ù–∞–∫–æ–ø–∏—Ç–µ 50,000 –º–æ–Ω–µ—Ç",
                "icon": "üíé",
                "category": "economy",
                "condition_type": "coins_total",
                "condition_value": 50000,
                "reward_coins": 5000,
                "reward_experience": 1500,
                "difficulty": "hard",
                "points": 80
            },
            {
                "name": "–ú–æ–Ω–µ—Ç–Ω—ã–π –º–∞–≥–Ω–∞—Ç",
                "description": "–ù–∞–∫–æ–ø–∏—Ç–µ 200,000 –º–æ–Ω–µ—Ç",
                "icon": "üëë",
                "category": "economy",
                "condition_type": "coins_total",
                "condition_value": 200000,
                "reward_coins": 20000,
                "reward_experience": 5000,
                "difficulty": "legendary",
                "points": 150
            },
            {
                "name": "–ü—Ä–æ–¥–∞–≤–µ—Ü –≥–æ–¥–∞",
                "description": "–ü—Ä–æ–¥–∞–π—Ç–µ 200 –∫–∞—Ä—Ç–æ—á–µ–∫",
                "icon": "üí∞",
                "category": "economy",
                "condition_type": "cards_sold",
                "condition_value": 200,
                "reward_coins": 1000,
                "reward_experience": 400,
                "difficulty": "normal",
                "points": 35
            },
            {
                "name": "–¢–æ—Ä–≥–æ–≤—ã–π –º–∞–≥–Ω–∞—Ç",
                "description": "–ó–∞—Ä–∞–±–æ—Ç–∞–π—Ç–µ 100,000 –º–æ–Ω–µ—Ç –ø—Ä–æ–¥–∞–∂–µ–π –∫–∞—Ä—Ç–æ—á–µ–∫",
                "icon": "üè¶",
                "category": "economy",
                "condition_type": "selling_profit",
                "condition_value": 100000,
                "reward_coins": 10000,
                "reward_experience": 3000,
                "difficulty": "legendary",
                "points": 120
            },
            
            # –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –û–ë–©–ò–ï –î–û–°–¢–ò–ñ–ï–ù–ò–Ø
            {
                "name": "–ì—É—Ä—É –∫–∞—Ä—Ç–æ—á–µ–∫ PRO",
                "description": "–î–æ—Å—Ç–∏–≥–Ω–∏—Ç–µ 25-–≥–æ —É—Ä–æ–≤–Ω—è",
                "icon": "üöÄ",
                "category": "general",
                "condition_type": "level",
                "condition_value": 25,
                "reward_coins": 2500,
                "reward_experience": 1000,
                "difficulty": "hard",
                "points": 60
            },
            {
                "name": "–õ–µ–≥–µ–Ω–¥–∞ —É—Ä–æ–≤–Ω–µ–π",
                "description": "–î–æ—Å—Ç–∏–≥–Ω–∏—Ç–µ 50-–≥–æ —É—Ä–æ–≤–Ω—è",
                "icon": "‚≠ê",
                "category": "general",
                "condition_type": "level",
                "condition_value": 50,
                "reward_coins": 10000,
                "reward_experience": 5000,
                "difficulty": "legendary",
                "points": 200
            },
            {
                "name": "–í–µ—Ç–µ—Ä–∞–Ω –∏–≥—Ä—ã",
                "description": "–ò–≥—Ä–∞–π—Ç–µ 60 –¥–Ω–µ–π –ø–æ–¥—Ä—è–¥",
                "icon": "üéñÔ∏è",
                "category": "general",
                "condition_type": "daily_streak",
                "condition_value": 60,
                "reward_coins": 3000,
                "reward_experience": 1500,
                "difficulty": "hard",
                "points": 80
            },
            {
                "name": "–ñ–µ–ª–µ–∑–Ω–∞—è –≤–æ–ª—è",
                "description": "–ò–≥—Ä–∞–π—Ç–µ 365 –¥–Ω–µ–π –ø–æ–¥—Ä—è–¥",
                "icon": "‚öîÔ∏è",
                "category": "general",
                "condition_type": "daily_streak",
                "condition_value": 365,
                "reward_coins": 20000,
                "reward_experience": 10000,
                "difficulty": "legendary",
                "points": 500
            },
            {
                "name": "–°–∫–æ—Ä–æ—Å—Ç–Ω–æ–π –∫–æ–ª–ª–µ–∫—Ü–∏–æ–Ω–µ—Ä",
                "description": "–°–æ–±–µ—Ä–∏—Ç–µ 100 –∫–∞—Ä—Ç–æ—á–µ–∫ –∑–∞ –æ–¥–∏–Ω –¥–µ–Ω—å",
                "icon": "‚ö°",
                "category": "general",
                "condition_type": "cards_per_day",
                "condition_value": 100,
                "reward_coins": 2000,
                "reward_experience": 800,
                "difficulty": "hard",
                "points": 60
            },
            
            # –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –°–û–¶–ò–ê–õ–¨–ù–´–ï –î–û–°–¢–ò–ñ–ï–ù–ò–Ø
            {
                "name": "–ú–∞—Å—Ç–µ—Ä –∏–¥–µ–π",
                "description": "–ü—Ä–µ–¥–ª–æ–∂–∏—Ç–µ 25 –∫–∞—Ä—Ç–æ—á–µ–∫",
                "icon": "üß†",
                "category": "social",
                "condition_type": "suggestions_made",
                "condition_value": 25,
                "reward_coins": 2000,
                "reward_experience": 800,
                "difficulty": "hard",
                "points": 50
            },
            {
                "name": "–ü–æ–ø—É–ª—è—Ä–Ω—ã–π –∞–≤—Ç–æ—Ä",
                "description": "–ü–æ–ª—É—á–∏—Ç–µ 10 –ø—Ä–∏–Ω—è—Ç—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π",
                "icon": "‚≠ê",
                "category": "social",
                "condition_type": "accepted_suggestions",
                "condition_value": 10,
                "reward_coins": 3000,
                "reward_experience": 1200,
                "difficulty": "hard",
                "points": 75
            },
            {
                "name": "–í–∏—Ä—Ç—É–æ–∑ —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–∞",
                "description": "–ü–æ–ª—É—á–∏—Ç–µ 50 –ø—Ä–∏–Ω—è—Ç—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π",
                "icon": "üé≠",
                "category": "social",
                "condition_type": "accepted_suggestions",
                "condition_value": 50,
                "reward_coins": 10000,
                "reward_experience": 5000,
                "difficulty": "legendary",
                "points": 200
            },
            
            # –ú–ù–û–ñ–ï–°–¢–í–û –û–°–û–ë–´–• –î–û–°–¢–ò–ñ–ï–ù–ò–ô
            {
                "name": "–ü–æ–ª—É–Ω–æ—á–Ω–∏–∫",
                "description": "–ü–æ–ª—É—á–∏—Ç–µ –∫–∞—Ä—Ç–æ—á–∫—É —Ä–æ–≤–Ω–æ –≤ 00:00",
                "icon": "üåô",
                "category": "special",
                "condition_type": "midnight_card",
                "condition_value": 1,
                "reward_coins": 1000,
                "reward_experience": 400,
                "difficulty": "special",
                "points": 50,
                "is_hidden": True
            },
            {
                "name": "–ó–æ–ª–æ—Ç–∞—è –ª–∏—Ö–æ—Ä–∞–¥–∫–∞",
                "description": "–ü–æ–ª—É—á–∏—Ç–µ 5 –ª–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã—Ö –∫–∞—Ä—Ç–æ—á–µ–∫ –ø–æ–¥—Ä—è–¥",
                "icon": "ü•á",
                "category": "special",
                "condition_type": "legendary_streak",
                "condition_value": 5,
                "reward_coins": 5000,
                "reward_experience": 2000,
                "difficulty": "legendary",
                "points": 150,
                "is_hidden": True
            },
            {
                "name": "–ú–∞–≥–Ω–∏—Ç –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤",
                "description": "–ü–æ–ª—É—á–∏—Ç–µ 10 –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤ –∑–∞ –º–µ—Å—è—Ü",
                "icon": "üß≤",
                "category": "special",
                "condition_type": "artifacts_per_month",
                "condition_value": 10,
                "reward_coins": 10000,
                "reward_experience": 5000,
                "difficulty": "legendary",
                "points": 300,
                "is_hidden": True
            },
            {
                "name": "–û—Ç–ª–∏—á–Ω–∏–∫",
                "description": "–ó–∞–≤–µ—Ä—à–∏—Ç–µ —Å–≤–æ–π –ø–µ—Ä–≤—ã–π –∏–≤–µ–Ω—Ç",
                "icon": "üéì",
                "category": "special",
                "condition_type": "complete_event",
                "condition_value": 1,
                "reward_coins": 1000,
                "reward_experience": 500,
                "difficulty": "normal",
                "points": 40
            },
            {
                "name": "–ß–µ–º–ø–∏–æ–Ω –∏–≤–µ–Ω—Ç–æ–≤",
                "description": "–ó–∞–≤–µ—Ä—à–∏—Ç–µ 10 –∏–≤–µ–Ω—Ç–æ–≤",
                "icon": "üèÜ",
                "category": "special",
                "condition_type": "complete_events",
                "condition_value": 10,
                "reward_coins": 5000,
                "reward_experience": 2500,
                "difficulty": "hard",
                "points": 100
            },
            {
                "name": "–õ–µ–≥–µ–Ω–¥–∞ –∏–≤–µ–Ω—Ç–æ–≤",
                "description": "–ó–∞–≤–µ—Ä—à–∏—Ç–µ 50 –∏–≤–µ–Ω—Ç–æ–≤",
                "icon": "üëë",
                "category": "special",
                "condition_type": "complete_events",
                "condition_value": 50,
                "reward_coins": 25000,
                "reward_experience": 10000,
                "difficulty": "legendary",
                "points": 300
            },
            {
                "name": "–ü–µ—Ä—Ñ–µ–∫—Ü–∏–æ–Ω–∏—Å—Ç",
                "description": "–ü–æ–ª—É—á–∏—Ç–µ 100% –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π –≤ –æ–¥–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏",
                "icon": "üíØ",
                "category": "special",
                "condition_type": "perfect_category",
                "condition_value": 1,
                "reward_coins": 3000,
                "reward_experience": 1500,
                "difficulty": "hard",
                "points": 80,
                "is_hidden": True
            },
            {
                "name": "–ö–æ–ª–ª–µ–∫—Ü–∏–æ–Ω–µ—Ä –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π",
                "description": "–ü–æ–ª—É—á–∏—Ç–µ 75 –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π",
                "icon": "üèÖ",
                "category": "special",
                "condition_type": "achievements_count",
                "condition_value": 75,
                "reward_coins": 8000,
                "reward_experience": 4000,
                "difficulty": "legendary",
                "points": 200
            },
            {
                "name": "–ú–∞—Å—Ç–µ—Ä –≤—Å–µ–≥–æ",
                "description": "–ü–æ–ª—É—á–∏—Ç–µ –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è",
                "icon": "üåü",
                "category": "special",
                "condition_type": "all_achievements",
                "condition_value": 1,
                "reward_coins": 50000,
                "reward_experience": 25000,
                "difficulty": "legendary",
                "points": 1000,
                "is_hidden": True
            },
            {
                "name": "–í–µ–∑—É–Ω—á–∏–∫ –¥–Ω—è",
                "description": "–ü–æ–ª—É—á–∏—Ç–µ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç –≤ –ø—Ä–∞–∑–¥–Ω–∏—á–Ω—ã–π –¥–µ–Ω—å",
                "icon": "üéÇ",
                "category": "special",
                "condition_type": "holiday_artifact",
                "condition_value": 1,
                "reward_coins": 2000,
                "reward_experience": 1000,
                "difficulty": "special",
                "points": 100,
                "is_hidden": True
            },
            {
                "name": "–ü–µ—Ä–≤–æ–ø—Ä–æ—Ö–æ–¥–µ—Ü",
                "description": "–ü–æ–ª—É—á–∏—Ç–µ –∫–∞—Ä—Ç–æ—á–∫—É –ø–µ—Ä–≤—ã–º –∏–∑ –≤—Å–µ—Ö –∏–≥—Ä–æ–∫–æ–≤",
                "icon": "üö©",
                "category": "special",
                "condition_type": "first_card_ever",
                "condition_value": 1,
                "reward_coins": 3000,
                "reward_experience": 1500,
                "difficulty": "special",
                "points": 150,
                "is_hidden": True
            },
            {
                "name": "–°—É–ø–µ—Ä –∫–æ–ª–ª–µ–∫—Ü–∏–æ–Ω–µ—Ä",
                "description": "–°–æ–±–µ—Ä–∏—Ç–µ 1500 –∫–∞—Ä—Ç–æ—á–µ–∫",
                "icon": "üí•",
                "category": "special",
                "condition_type": "cards_count",
                "condition_value": 1500,
                "reward_coins": 15000,
                "reward_experience": 8000,
                "difficulty": "legendary",
                "points": 400
            },
            {
                "name": "–©–µ–¥—Ä—ã–π –±–ª–∞–≥–æ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å",
                "description": "–£—á–∞—Å—Ç–≤—É–π—Ç–µ –≤ 20 —Ä–∞–∑–¥–∞—á–∞—Ö –æ—Ç –∞–¥–º–∏–Ω–∞",
                "icon": "üéÅ",
                "category": "special",
                "condition_type": "giveaway_participation",
                "condition_value": 20,
                "reward_coins": 3000,
                "reward_experience": 1200,
                "difficulty": "normal",
                "points": 60
            },
            {
                "name": "–õ—é–±–∏–º–µ—Ü —É–¥–∞—á–∏",
                "description": "–í—ã–∏–≥—Ä–∞–π—Ç–µ –≤ 10 —Ä–∞–∑–¥–∞—á–∞—Ö –æ—Ç –∞–¥–º–∏–Ω–∞",
                "icon": "üé∞",
                "category": "special",
                "condition_type": "giveaway_wins",
                "condition_value": 10,
                "reward_coins": 8000,
                "reward_experience": 3000,
                "difficulty": "hard",
                "points": 120,
                "is_hidden": True
            },
            {
                "name": "–≠–∫—Å—Ç—Ä–µ–º–∞–ª—å–Ω—ã–π –∫–æ–ª–ª–µ–∫—Ü–∏–æ–Ω–µ—Ä",
                "description": "–°–æ–±–µ—Ä–∏—Ç–µ 500 –∫–∞—Ä—Ç–æ—á–µ–∫ –∑–∞ –¥–µ–Ω—å",
                "icon": "üå™Ô∏è",
                "category": "special",
                "condition_type": "cards_per_day",
                "condition_value": 500,
                "reward_coins": 10000,
                "reward_experience": 5000,
                "difficulty": "legendary",
                "points": 250,
                "is_hidden": True
            },
            {
                "name": "–¢–∞–π–Ω—ã–π –∞–≥–µ–Ω—Ç",
                "description": "–ù–∞–π–¥–∏—Ç–µ –∏ –ø–æ–ª—É—á–∏—Ç–µ —Å–∫—Ä—ã—Ç—É—é –∫–∞—Ä—Ç–æ—á–∫—É",
                "icon": "üïµÔ∏è",
                "category": "special",
                "condition_type": "secret_card",
                "condition_value": 1,
                "reward_coins": 5000,
                "reward_experience": 2500,
                "difficulty": "legendary",
                "points": 200,
                "is_hidden": True
            },
            {
                "name": "–ú–∏–ª–ª–∏–∞—Ä–¥–µ—Ä",
                "description": "–ù–∞–∫–æ–ø–∏—Ç–µ 1,000,000 –º–æ–Ω–µ—Ç",
                "icon": "üí∏",
                "category": "special",
                "condition_type": "coins_total",
                "condition_value": 1000000,
                "reward_coins": 500000,
                "reward_experience": 50000,
                "difficulty": "legendary",
                "points": 2000,
                "is_hidden": True
            },
            {
                "name": "–ú–∞—à–∏–Ω–∞ –≤—Ä–µ–º–µ–Ω–∏",
                "description": "–ò–≥—Ä–∞–π—Ç–µ –Ω–µ–ø—Ä–µ—Ä—ã–≤–Ω–æ –≤ —Ç–µ—á–µ–Ω–∏–µ 1000 –¥–Ω–µ–π",
                "icon": "‚è∞",
                "category": "special",
                "condition_type": "total_days_played",
                "condition_value": 1000,
                "reward_coins": 100000,
                "reward_experience": 50000,
                "difficulty": "legendary",
                "points": 1000,
                "is_hidden": True
            },
            {
                "name": "–ö–æ—Ä–æ–ª—å –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤",
                "description": "–°–æ–±–µ—Ä–∏—Ç–µ 100 –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤",
                "icon": "üëë",
                "category": "special",
                "condition_type": "artifact_collection",
                "condition_value": 100,
                "reward_coins": 50000,
                "reward_experience": 25000,
                "difficulty": "legendary",
                "points": 500,
                "is_hidden": True
            },
            {
                "name": "–ë–µ–∑—É–º–Ω—ã–π –∫–æ–ª–ª–µ–∫—Ü–∏–æ–Ω–µ—Ä",
                "description": "–°–æ–±–µ—Ä–∏—Ç–µ 10,000 –∫–∞—Ä—Ç–æ—á–µ–∫ –æ–±—â–µ–≥–æ",
                "icon": "ü§Ø",
                "category": "special",
                "condition_type": "cards_count",
                "condition_value": 10000,
                "reward_coins": 100000,
                "reward_experience": 50000,
                "difficulty": "legendary",
                "points": 1500,
                "is_hidden": True
            },
            {
                "name": "–ò–º–ø–µ—Ä–∞—Ç–æ—Ä –º–æ–Ω–µ—Ç",
                "description": "–ü–æ—Ç—Ä–∞—Ç—å—Ç–µ 1,000,000 –º–æ–Ω–µ—Ç –≤ –º–∞–≥–∞–∑–∏–Ω–µ",
                "icon": "üëë",
                "category": "special",
                "condition_type": "coins_spent",
                "condition_value": 1000000,
                "reward_coins": 200000,
                "reward_experience": 75000,
                "difficulty": "legendary",
                "points": 800,
                "is_hidden": True
            },
            {
                "name": "–î–Ω–µ–≤–Ω–æ–π —Ä—ã—Ü–∞—Ä—å",
                "description": "–ü–æ–ª—É—á–∏—Ç–µ –∫–∞—Ä—Ç–æ—á–∫—É —Ä–æ–≤–Ω–æ –≤ 12:00",
                "icon": "‚òÄÔ∏è",
                "category": "special",
                "condition_type": "noon_card",
                "condition_value": 1,
                "reward_coins": 500,
                "reward_experience": 200,
                "difficulty": "special",
                "points": 30,
                "is_hidden": True
            },
            {
                "name": "–ù–æ—á–Ω–∞—è —Å–æ–≤–∞",
                "description": "–ü–æ–ª—É—á–∏—Ç–µ 100 –∫–∞—Ä—Ç–æ—á–µ–∫ –ø–æ—Å–ª–µ 22:00",
                "icon": "ü¶â",
                "category": "special",
                "condition_type": "night_cards",
                "condition_value": 100,
                "reward_coins": 2000,
                "reward_experience": 800,
                "difficulty": "hard",
                "points": 60,
                "is_hidden": True
            },
            {
                "name": "–£—Ç—Ä–µ–Ω–Ω—è—è –ø—Ç–∏—á–∫–∞",
                "description": "–ü–æ–ª—É—á–∏—Ç–µ 100 –∫–∞—Ä—Ç–æ—á–µ–∫ –¥–æ 06:00",
                "icon": "üê¶",
                "category": "special",
                "condition_type": "morning_cards",
                "condition_value": 100,
                "reward_coins": 2000,
                "reward_experience": 800,
                "difficulty": "hard",
                "points": 60,
                "is_hidden": True
            },
            {
                "name": "–ú–∞—Å—Ç–µ—Ä –≤—Ä–µ–º–µ–Ω–∏",
                "description": "–ü–æ–ª—É—á–∏—Ç–µ –∫–∞—Ä—Ç–æ—á–∫–∏ –≤–æ –≤—Å–µ 24 —á–∞—Å–∞ –¥–Ω—è",
                "icon": "üïê",
                "category": "special",
                "condition_type": "all_hours_cards",
                "condition_value": 24,
                "reward_coins": 5000,
                "reward_experience": 2000,
                "difficulty": "legendary",
                "points": 150,
                "is_hidden": True
            },
            {
                "name": "–ù–µ—É–¥–µ—Ä–∂–∏–º—ã–π",
                "description": "–ü–æ–ª—É—á–∏—Ç–µ 1000 –∫–∞—Ä—Ç–æ—á–µ–∫ –Ω–µ –ø—Ä–µ—Ä—ã–≤–∞—è—Å—å",
                "icon": "üî•",
                "category": "special",
                "condition_type": "card_streak",
                "condition_value": 1000,
                "reward_coins": 25000,
                "reward_experience": 10000,
                "difficulty": "legendary",
                "points": 400,
                "is_hidden": True
            },
            {
                "name": "–ë–æ–≥ –∫–æ–ª–ª–µ–∫—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è",
                "description": "–î–æ—Å—Ç–∏–≥–Ω–∏—Ç–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ —É—Ä–æ–≤–Ω—è 100",
                "icon": "üî±",
                "category": "special",
                "condition_type": "level",
                "condition_value": 100,
                "reward_coins": 1000000,
                "reward_experience": 100000,
                "difficulty": "legendary",
                "points": 5000,
                "is_hidden": True
            }
        ]
        
        collection = await self.get_collection()
        
        for achievement_data in default_achievements:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ —Ç–∞–∫–æ–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ
            existing = await collection.find_one({"name": achievement_data["name"]})
            if not existing:
                achievement = Achievement(**achievement_data)
                await collection.insert_one(achievement.dict(by_alias=True, exclude={"id"}))
                logger.info(f"Created achievement: {achievement_data['name']}")
    
    async def check_user_achievements(self, user: User) -> List[Achievement]:
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏ –≤—ã–¥–∞–µ—Ç –Ω–æ–≤—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é"""
        from services.user_service import user_service
        
        new_achievements = []
        all_achievements = await self.get_all_achievements()
        user_achievement_ids = [ua.achievement_id for ua in user.achievements if ua.is_completed]
        
        for achievement in all_achievements:
            if str(achievement.id) in user_achievement_ids:
                continue  # –£–∂–µ –ø–æ–ª—É—á–µ–Ω–æ
            
            if await self._check_achievement_condition(user, achievement):
                # –í—ã–¥–∞–µ–º –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ
                user_achievement = UserAchievement(
                    achievement_id=str(achievement.id),
                    is_completed=True,
                    progress=achievement.condition_value
                )
                user.achievements.append(user_achievement)
                user.achievement_points += achievement.points
                user.coins += achievement.reward_coins
                user.experience += achievement.reward_experience
                
                # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
                achievement.total_earned += 1
                if achievement.first_earned_by is None:
                    achievement.first_earned_by = user.telegram_id
                    achievement.first_earned_at = datetime.utcnow()
                
                await self.update_achievement(achievement)
                new_achievements.append(achievement)
        
        if new_achievements:
            await user_service.update_user(user)
        
        return new_achievements
    
    async def _check_achievement_condition(self, user: User, achievement: Achievement) -> bool:
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —É—Å–ª–æ–≤–∏–µ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è"""
        condition_type = achievement.condition_type
        condition_value = achievement.condition_value
        condition_data = achievement.condition_data or {}
        
        if condition_type == "cards_count":
            return user.total_cards >= condition_value
        
        elif condition_type == "level":
            return user.level >= condition_value
        
        elif condition_type == "coins_total":
            return user.coins >= condition_value
        
        elif condition_type == "rarity_card":
            rarity = condition_data.get("rarity", "common")
            from services.card_service import card_service
            
            count = 0
            for user_card in user.cards:
                if user_card.quantity > 0:
                    card = await card_service.get_card_by_id(user_card.card_id)
                    if card and card.rarity.lower() == rarity.lower():
                        count += user_card.quantity
            return count >= condition_value
        
        elif condition_type == "shop_purchase":
            return user.shop_purchases_count >= condition_value
        
        elif condition_type == "shop_purchases":
            return user.shop_purchases_count >= condition_value
        
        elif condition_type == "days_streak":
            return user.daily_streak >= condition_value
        
        elif condition_type == "daily_streak":
            return user.daily_streak >= condition_value
        
        elif condition_type == "suggestions_made":
            return user.suggestions_made >= condition_value
        
        elif condition_type == "accepted_suggestions":
            return user.accepted_suggestions >= condition_value
        
        elif condition_type == "artifact_random":
            return user.artifact_cards_received >= condition_value
        
        elif condition_type == "early_bird":
            return user.morning_cards_count >= condition_value
        
        elif condition_type == "midnight_card":
            return user.has_received_card_at_hour(0)
        
        elif condition_type == "noon_card":
            return user.has_received_card_at_hour(12)
        
        elif condition_type == "legendary_streak":
            return user.legendary_streak >= condition_value
        
        elif condition_type == "artifacts_per_month":
            return user.artifacts_this_month >= condition_value
        
        elif condition_type == "complete_event":
            return user.events_completed >= condition_value
        
        elif condition_type == "complete_events":
            return user.events_completed >= condition_value
        
        elif condition_type == "perfect_category":
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º 100% –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
            category = condition_data.get("category", "general")
            all_achievements = await self.get_all_achievements()
            category_achievements = [a for a in all_achievements if a.category == category]
            user_completed_in_category = len([ua for ua in user.achievements if ua.is_completed])
            return user_completed_in_category >= len(category_achievements)
        
        elif condition_type == "achievements_count":
            completed_count = len([ua for ua in user.achievements if ua.is_completed])
            return completed_count >= condition_value
        
        elif condition_type == "all_achievements":
            all_achievements = await self.get_all_achievements()
            completed_count = len([ua for ua in user.achievements if ua.is_completed])
            return completed_count >= len(all_achievements)
        
        elif condition_type == "holiday_artifact":
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞ –≤ –ø—Ä–∞–∑–¥–Ω–∏—á–Ω—ã–π –¥–µ–Ω—å
            from datetime import datetime
            now = datetime.utcnow()
            # –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—Ä–∞–∑–¥–Ω–∏–∫–∏ (1 —è–Ω–≤–∞—Ä—è, 8 –º–∞—Ä—Ç–∞, 9 –º–∞—è –∏ —Ç.–¥.)
            holidays = [(1, 1), (3, 8), (5, 9), (12, 31)]
            is_holiday = (now.month, now.day) in holidays
            return is_holiday and user.artifact_cards_received >= condition_value
        
        elif condition_type == "first_card_ever":
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ–ª—É—á–∏–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–µ—Ä–≤—É—é –∫–∞—Ä—Ç–æ—á–∫—É –≤ —Å–∏—Å—Ç–µ–º–µ
            from services.user_service import user_service
            all_users = await user_service.get_all_users()
            # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –¥–∞—Ç–µ —Å–æ–∑–¥–∞–Ω–∏—è –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª –ª–∏ —ç—Ç–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–µ—Ä–≤—ã–º
            sorted_users = sorted(all_users, key=lambda u: u.created_at)
            return sorted_users[0].telegram_id == user.telegram_id
        
        elif condition_type == "cards_per_day":
            return user.cards_received_today >= condition_value
        
        elif condition_type == "night_cards":
            return user.night_cards_count >= condition_value
        
        elif condition_type == "morning_cards":
            return user.morning_cards_count >= condition_value
        
        elif condition_type == "all_hours_cards":
            return user.get_unique_hours_count() >= condition_value
        
        elif condition_type == "card_streak":
            return user.card_streak >= condition_value
        
        elif condition_type == "total_days_played":
            return user.total_days_played >= condition_value
        
        elif condition_type == "artifact_collection":
            return user.artifact_cards_received >= condition_value
        
        elif condition_type == "coins_spent":
            return user.total_coins_spent >= condition_value
        
        elif condition_type == "cards_sold":
            return user.cards_sold_count >= condition_value
        
        elif condition_type == "selling_profit":
            return user.selling_profit >= condition_value
        
        elif condition_type == "duplicate_cards":
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤ –æ–¥–Ω–æ–π –∫–∞—Ä—Ç–æ—á–∫–∏
            max_duplicates = max([card.quantity for card in user.cards], default=0)
            return max_duplicates >= condition_value
        
        elif condition_type == "all_rarities":
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–∞—Ä—Ç–æ—á–µ–∫ –≤—Å–µ—Ö —Ä–µ–¥–∫–æ—Å—Ç–µ–π
            from services.card_service import card_service
            rarities = ["common", "rare", "epic", "legendary", "artifact"]
            user_rarities = set()
            
            for user_card in user.cards:
                if user_card.quantity > 0:
                    card = await card_service.get_card_by_id(user_card.card_id)
                    if card:
                        user_rarities.add(card.rarity.lower())
            
            return len(user_rarities) >= len(rarities)
        
        elif condition_type == "complete_collection":
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª–Ω—É—é –∫–æ–ª–ª–µ–∫—Ü–∏—é
            from services.card_service import card_service
            all_cards = await card_service.get_all_cards()
            user_card_ids = {card.card_id for card in user.cards if card.quantity > 0}
            return len(user_card_ids) >= len(all_cards)
        
        elif condition_type == "giveaway_participation":
            return user.giveaway_participation >= condition_value
        
        elif condition_type == "giveaway_wins":
            return user.giveaway_wins >= condition_value
        
        elif condition_type == "secret_card":
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–∫—Ä—ã—Ç–æ–π –∫–∞—Ä—Ç–æ—á–∫–∏ (–ø–æ–∫–∞ –∑–∞–≥–ª—É—à–∫–∞)
            return False
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª–æ–≤–∏—è –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∑–¥–µ—Å—å
        return False
    
    async def get_all_achievements(self) -> List[Achievement]:
        """–ü–æ–ª—É—á–∞–µ—Ç –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è"""
        collection = await self.get_collection()
        achievements_data = await collection.find({"is_active": True}).to_list(length=None)
        return [Achievement(**data) for data in achievements_data]
    
    async def get_achievement_by_id(self, achievement_id: str) -> Optional[Achievement]:
        """–ü–æ–ª—É—á–∞–µ—Ç –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ –ø–æ ID"""
        from bson import ObjectId
        collection = await self.get_collection()
        
        if ObjectId.is_valid(achievement_id):
            data = await collection.find_one({"_id": ObjectId(achievement_id)})
            if data:
                return Achievement(**data)
        return None
    
    async def update_achievement(self, achievement: Achievement) -> bool:
        """–û–±–Ω–æ–≤–ª—è–µ—Ç –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ"""
        try:
            collection = await self.get_collection()
            achievement.updated_at = datetime.utcnow()
            
            result = await collection.update_one(
                {"_id": achievement.id},
                {"$set": achievement.dict(by_alias=True, exclude={"id"})}
            )
            return result.modified_count > 0
        except Exception as e:
            logger.error(f"Error updating achievement: {e}")
            return False
    
    async def get_user_achievement_stats(self, user: User) -> Dict[str, Any]:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        total_achievements = len(await self.get_all_achievements())
        user_completed = len([ua for ua in user.achievements if ua.is_completed])
        
        categories = {}
        for ua in user.achievements:
            if ua.is_completed:
                achievement = await self.get_achievement_by_id(ua.achievement_id)
                if achievement:
                    category = achievement.category
                    if category not in categories:
                        categories[category] = 0
                    categories[category] += 1
        
        return {
            "total_possible": total_achievements,
            "completed": user_completed,
            "completion_percentage": round((user_completed / total_achievements) * 100, 1) if total_achievements > 0 else 0,
            "total_points": user.achievement_points,
            "categories": categories
        }


# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä —Å–µ—Ä–≤–∏—Å–∞
achievement_service = AchievementService()

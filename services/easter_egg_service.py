from datetime import datetime
from typing import Dict, Optional, Tuple
from loguru import logger

from models.user import User
from services.user_service import user_service


class EasterEggService:
    """–°–µ—Ä–≤–∏—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø–∞—Å—Ö–∞–ª–∫–∞–º–∏"""
    
    def __init__(self):
        # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø–∞—Å—Ö–∞–ª–æ–∫: {–∫–æ–¥: (–º–æ–Ω–µ—Ç—ã, –æ–ø–∏—Å–∞–Ω–∏–µ)}
        self.easter_eggs: Dict[str, Tuple[int, str]] = {
            "1488": (600, "–°–µ–∫—Ä–µ—Ç–Ω–∞—è –Ω–∞–≥—Ä–∞–¥–∞ –∑–∞ –∑–Ω–∞–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏"),
            "52": (400, "–û—Å–æ–±–∞—è –Ω–∞–≥—Ä–∞–¥–∞ –¥–ª—è –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö"),
            "1337": (250, "–ù–∞–≥—Ä–∞–¥–∞ –¥–ª—è —Ö–∞–∫–µ—Ä–æ–≤")
        }
    
    async def check_easter_egg(self, user: User, code: str) -> Tuple[bool, str, int]:
        """
        –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–∞—Å—Ö–∞–ª–∫—É –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        
        Returns:
            Tuple[bool, str, int]: (—É—Å–ø–µ—Ö, —Å–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–æ–Ω–µ—Ç)
        """
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ø—ã—Ç–∞—Ç—å—Å—è
            if not user.can_attempt_easter_egg():
                remaining_attempts = 3 - user.easter_egg_attempts_today
                return False, f"‚ùå –ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –ø–æ–ø—ã—Ç–æ–∫ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è! –û—Å—Ç–∞–ª–æ—Å—å –ø–æ–ø—ã—Ç–æ–∫: {remaining_attempts}", 0
            
            # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–æ–ø—ã—Ç–∫—É
            user.record_easter_egg_attempt()
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ç–∞–∫–∞—è –ø–∞—Å—Ö–∞–ª–∫–∞
            if code not in self.easter_eggs:
                return False, "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –∫–æ–¥! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.", 0
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –±—ã–ª–∞ –ª–∏ —É–∂–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞
            if user.has_activated_easter_egg(code):
                return False, "üéÅ –≠—Ç–∞ –ø–∞—Å—Ö–∞–ª–∫–∞ —É–∂–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞!", 0
            
            # –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –ø–∞—Å—Ö–∞–ª–∫—É
            coins, description = self.easter_eggs[code]
            user.activate_easter_egg(code)
            user.coins += coins
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
            await user_service.update_user(user)
            
            return True, f"üéâ **–ü–∞—Å—Ö–∞–ª–∫–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞!**\n\nüí∞ –ü–æ–ª—É—á–µ–Ω–æ: {coins} –º–æ–Ω–µ—Ç\nüìù {description}", coins
            
        except Exception as e:
            logger.error(f"Error checking easter egg for user {user.telegram_id}: {e}")
            return False, "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–∞—Å—Ö–∞–ª–∫–∏", 0
    
    async def get_easter_egg_status(self, user: User) -> str:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç–∞—Ç—É—Å –ø–∞—Å—Ö–∞–ª–æ–∫ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        try:
            status_text = "ü•ö **–ü–∞—Å—Ö–∞–ª–∫–∏**\n\n"
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–∞—Å—Ö–∞–ª–∫–∏
            if user.easter_eggs_activated:
                status_text += "‚úÖ **–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–∞—Å—Ö–∞–ª–∫–∏:**\n"
                for egg_id in user.easter_eggs_activated:
                    coins, description = self.easter_eggs.get(egg_id, (0, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –ø–∞—Å—Ö–∞–ª–∫–∞"))
                    status_text += f"‚Ä¢ {egg_id} - {coins} –º–æ–Ω–µ—Ç ({description})\n"
                status_text += "\n"
            else:
                status_text += "üîç –ü–æ–∫–∞ –Ω–µ—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–∞—Å—Ö–∞–ª–æ–∫\n\n"
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –ø–æ–ø—ã—Ç–∫–∏
            if user.can_attempt_easter_egg():
                remaining = 3 - user.easter_egg_attempts_today
                status_text += f"üéØ –û—Å—Ç–∞–ª–æ—Å—å –ø–æ–ø—ã—Ç–æ–∫ —Å–µ–≥–æ–¥–Ω—è: {remaining}/3"
            else:
                status_text += "‚è∞ –õ–∏–º–∏—Ç –ø–æ–ø—ã—Ç–æ–∫ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è –∏—Å—á–µ—Ä–ø–∞–Ω"
            
            return status_text
            
        except Exception as e:
            logger.error(f"Error getting easter egg status for user {user.telegram_id}: {e}")
            return "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –ø–∞—Å—Ö–∞–ª–æ–∫"
    
    def get_easter_egg_hint(self) -> str:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–¥—Å–∫–∞–∑–∫—É –¥–ª—è –ø–∞—Å—Ö–∞–ª–æ–∫"""
        return (
            "ü•ö **–ü–ê–°–•–ê–õ–ö–ê**\n\n"
            "üîç –ù–∞–ø–∏—à–∏—Ç–µ –≤ —á–∞—Ç –∑–∞–≥–∞–¥–æ—á–Ω—ã–π –∫–æ–¥ –∏ –ø–æ–ª—É—á–∏—Ç–µ –±–æ–Ω—É—Å!\n\n"
            "üí° **–ù–ê–ì–†–ê–î–ê ???** (3 –≤–∞—Ä–∏–∞—Ü–∏–∏)\n"
            "‚Ä¢ –°–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–æ–¥ 1 - 600 –º–æ–Ω–µ—Ç\n"
            "‚Ä¢ –°–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–æ–¥ 2 - 400 –º–æ–Ω–µ—Ç\n"
            "‚Ä¢ –°–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–æ–¥ 3 - 250 –º–æ–Ω–µ—Ç\n\n"
            "üéØ –ö–∞–∂–¥—ã–π –∫–æ–¥ –º–æ–∂–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑!\n"
            "‚è∞ –ú–∞–∫—Å–∏–º—É–º 3 –ø–æ–ø—ã—Ç–∫–∏ –≤ –¥–µ–Ω—å\n\n"
            "üîê –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —É–≥–∞–¥–∞—Ç—å, —á—Ç–æ –æ–∑–Ω–∞—á–∞—é—Ç —ç—Ç–∏ —á–∏—Å–ª–∞..."
        )


# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä —Å–µ—Ä–≤–∏—Å–∞
easter_egg_service = EasterEggService()
